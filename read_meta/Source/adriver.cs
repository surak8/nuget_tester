//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;
using NSCommon.Logging;

namespace NSRead_meta {

    public class read_metaDriver {
        [STAThread()]
        public static void Main(string[] args) {
            int exitCode = 0;

            if (args.Length < 1) {
                Console.Error.WriteLine("no args");
                showUsage();
                exitCode = 1;
            } else {
                foreach(string anArg in args) {
                    try {
                        //System.Diagnostics.Trace.WriteLine("jere");
                        var avar = System.Diagnostics.FileVersionInfo.GetVersionInfo(anArg);
                        System.Diagnostics.Trace.WriteLine("jere");
                        // AssemblyDescription = Comments
                        // AssemblyCompany = CompanyName
                        // AssemblyCopyright = LegalCoyright
                        // AssemblyFileVersion = FileVersion : FileMajorPar, FileMinorPart, FileBuildPart, FilePrivate Part
                        // AssemblyInformationalVersion = ProductVersion: ProductMajorPart, ProductMinorPart, ProductBuildPart, ProductPrivatePart


                    } catch (Exception ex) {
                        MiniLogger.log(MethodBase.GetCurrentMethod(), ex);
                        Console.Error.WriteLine (ex.Message);
                    }
                }
            }
            Environment.Exit(exitCode);
        }

          static void showUsage() {
            Console.Error.WriteLine("usage here");
        }
    }
}